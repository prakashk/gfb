digest [i] = ( (129 * message[i]) XOR message[i-1]) % 256

For the first element, the value of message[-1] is 0.

For example, if message[0] = 1 and message[1] = 129, then:
For digest[0]:
129*message[0] = 129
129 XOR message[-1] = 129
129 % 256 = 129
Thus digest[0] = 129.

For digest[1]:
129*message[1] = 16641
16641 XOR message[0] = 16640
16640 % 256 = 0
Thus digest[1] = 0.

Prelude Data.Bits> let d0 m = (129 * m) mod 256

Prelude Data.List.Split> splitEvery 8 $ zip [0..255] $ map d0 [0..255]
[[(0,0),(1,129),(2,2),(3,131),(4,4),(5,133),(6,6),(7,135)],
 [(8,8),(9,137),(10,10),(11,139),(12,12),(13,141),(14,14),(15,143)],
 [(16,16),(17,145),(18,18),(19,147),(20,20),(21,149),(22,22),(23,151)],
 [(24,24),(25,153),(26,26),(27,155),(28,28),(29,157),(30,30),(31,159)],
 [(32,32),(33,161),(34,34),(35,163),(36,36),(37,165),(38,38),(39,167)],
 [(40,40),(41,169),(42,42),(43,171),(44,44),(45,173),(46,46),(47,175)],
 [(48,48),(49,177),(50,50),(51,179),(52,52),(53,181),(54,54),(55,183)],
 [(56,56),(57,185),(58,58),(59,187),(60,60),(61,189),(62,62),(63,191)],
 [(64,64),(65,193),(66,66),(67,195),(68,68),(69,197),(70,70),(71,199)],
 [(72,72),(73,201),(74,74),(75,203),(76,76),(77,205),(78,78),(79,207)],
 [(80,80),(81,209),(82,82),(83,211),(84,84),(85,213),(86,86),(87,215)],
 [(88,88),(89,217),(90,90),(91,219),(92,92),(93,221),(94,94),(95,223)],
 [(96,96),(97,225),(98,98),(99,227),(100,100),(101,229),(102,102),(103,231)],
 [(104,104),(105,233),(106,106),(107,235),(108,108),(109,237),(110,110),(111,239)],
 [(112,112),(113,241),(114,114),(115,243),(116,116),(117,245),(118,118),(119,247)],
 [(120,120),(121,249),(122,122),(123,251),(124,124),(125,253),(126,126),(127,255)],
 [(128,128),(129,1),(130,130),(131,3),(132,132),(133,5),(134,134),(135,7)],
 [(136,136),(137,9),(138,138),(139,11),(140,140),(141,13),(142,142),(143,15)],
 [(144,144),(145,17),(146,146),(147,19),(148,148),(149,21),(150,150),(151,23)],
 [(152,152),(153,25),(154,154),(155,27),(156,156),(157,29),(158,158),(159,31)],
 [(160,160),(161,33),(162,162),(163,35),(164,164),(165,37),(166,166),(167,39)],
 [(168,168),(169,41),(170,170),(171,43),(172,172),(173,45),(174,174),(175,47)],
 [(176,176),(177,49),(178,178),(179,51),(180,180),(181,53),(182,182),(183,55)],
 [(184,184),(185,57),(186,186),(187,59),(188,188),(189,61),(190,190),(191,63)],
 [(192,192),(193,65),(194,194),(195,67),(196,196),(197,69),(198,198),(199,71)],
 [(200,200),(201,73),(202,202),(203,75),(204,204),(205,77),(206,206),(207,79)],
 [(208,208),(209,81),(210,210),(211,83),(212,212),(213,85),(214,214),(215,87)],
 [(216,216),(217,89),(218,218),(219,91),(220,220),(221,93),(222,222),(223,95)],
 [(224,224),(225,97),(226,226),(227,99),(228,228),(229,101),(230,230),(231,103)],
 [(232,232),(233,105),(234,234),(235,107),(236,236),(237,109),(238,238),(239,111)],
 [(240,240),(241,113),(242,242),(243,115),(244,244),(245,117),(246,246),(247,119)],
 [(248,248),(249,121),(250,250),(251,123),(252,252),(253,125),(254,254),(255,127)]]

d0 = m0        when m0 is even
d0 = m0 + 128  when m0 is odd & m0 < 128
d0 = m0 - 128  when m0 is odd & m0 > 128

==>

m0 = d0        when d0 is even
m0 = d0 + 128  when d0 is odd & d0 < 128
m0 = d0 - 128  when d0 is odd & d0 > 128

----------------

